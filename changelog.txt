-2024 July 19th:
 - Add credits_placeholder.txt for placeholder viewmodel meshes/textures.
 - Add FAQ.
 - Added water_scrpts.md documentation for water scripts.
 - Added entity_guide.mdl documentation for all entities in the FGD file.
 - Modified FBO setting to not be cvar-based, removed r_nofbo cvar.
 - Massive extension of demo levels shipped with Pathos.
   - Added beach area for daystage testing.
   - Added forest level for testing fog blending.
   - Extended test suite to include more tests.
 - Fix func_trackautochange_rc, previously it did not move after being used once.
 - Added diary models used by item_diary.
 - Remove pathos.fgd as it is not usable by anything but the closed custom Hammer.
 - Massive updates to pathos_jack.fgd:
   - Added Render FX flag "Scaled Skybox VBM model"
   - Remove animated light fields for light, light_spot, night_light and night_light_spot entities.
   - Removed unused keyvalues from func_door and func_door_rotating entities.
   - Added missing entries for custom movement/stop sounds to door and train entities.
   - Added missign entries for custom use/locked sounds for button entities.
   - Remove unused flags for trackchange entities.
   - Remove unused entries from trigger_ brush entities.
   - Add "XXL Radius" spawnflag to ambient_generic.
   - Add "No start/end segment fade" to env_beam entity.
   - Fix attachment functionality on env_beamfollow entity.
   - Remove unused entries from env_blood entity.
   - Add missing entry for "Blur Fade" to env_blur.
   - Add missing spawnflag for "Start On" to env_blur.
   - Reposition env_dlighttrain and env_elightrain to be in proper alphabetic order.
   - Add missing "Sprite Name" field to env_funnel for custom sprites.
   - Remove "Parent" from env_model as it's not used.
   - Add support for attaching to a target entity and/or attachment on said entity for env_particle_system.
   - Remove unused flags from env_shake.
   - Added env_syncanimation entity entry.
   - Remove unused entries from func_button.
   - Remove unused entries from func_rot_button.
   - Remove unused entries/spawnflags from func_tracktrain.
   - Add custom sound entries to func_tracktrain.
   - Remove unused "Wave Height" from func_water.
   - Remove unused "Alternate Source" entry from game_radio.
   - Remove unused entry from game_text.
   - Added info_vismark entity.
   - Added item_glock_flashlight and item_glock_silencer entities.
   - Remove unused spawnflag from item_motorbike.
   - Added "Night mode only" to light_environment.
   - Removed spawn flag "Head Controller" from npc_generic as it's not used.
   - Removed spawn flag "Not Solid" from npc_generic as it clashed with other spawnflags on NPCs.
   Instead, it was replaced with the "Not Solid" keyvalue.
   - Removed unused "Suspicious" entry from npc_security.
   - Removed unused "New Train rot. Speed" entry from path_corner.
   - Removed "Target" fields from scripted_sentence.
   - Formatting changes on numerous entities' field names.
   - Removed unused flags from scripted_sequence.
   - Added "Trigger on play sequence start" to scripted_sequence.
   - Added "Trigger on loop sequence start" to scripted_sequence.
   - Added "Trigger on loop exit sequence start" to scripted_sequence.
   - Removed unused fields from trigger_changelevel.
   - Removed unused flag "No Intermission" from trigger_changelevel.
   - Changed "Keypad Id" to "Code Id" on all entities that interact with registered codes.
   - Removed unused trigger_fileconditional entity.
   - Added "Delay before next hurt" field to trigger_hurt.
   - Removed "Target" field from trigger_killplayer.
   - Added new trigger_relay_binary entity.
   - Removed "Angles" from trigger_sound.
 - Fix numerous issues with Mission Objectives scripts.
 - Added HDR support to Pathos, so that dynamic light intensity is not lost during multi-pass dynamic light rendering.
 - Added an option in Video settings to disable/enable HDR.
 - Added an option in Video settings to disable/enable Framebuffer Objects.
 - Added new "wavefresnelstrength" field to water scripts to set how much waviness influences reflectivity.
 - Added in-game voice recordings that explain the function/use of entities.
 - Modify water script settings to make water look better ingame.
 - Moved all Visual Studio projects to VS 2022.
 - Fix the Pathos Model Viewer to support VS 2022.
 - Added viewmodel muzzlelash anim event 6065 with user-specifiable attachment index to use. Specified as "0;silenced" for example.
 - Fix for decal growth causing issues when reading decal messages.
 - Add support for scaling models in the skybox with the "Scaled Skybox VBM model" Render FX.
 - Fixes in C++ code where some member variables in some classes were not being properly initialized in the constructor.
 - Relace remaining C-style casts with C++ ones.
 - Fix ALD(Alternate Lightmap Data) feature to save the base lightmap in the BSP for restoring "Default" lighting from game_setdaystage.
 - Add support for allowing light_environments to switch skybox model lighting between eachother based on the stage of the day.
 - Increase the size of VBM_MAX_FLEXVERTS from 5376 to 21760.
 - Fix studiomdl.exe not accounting for VBM_MAX_FLEXVERTS properly and allowing models with larger flex vertex counts compile.
 - Fix issue with func_portal_surface entities not setting VIS properly for rendering.
 - Fix crash with func_portal_surface causing corruptions/crashes after the OpenGL window is destroyed then recreated upon changing video settings.
 - Fix crash caused by BSP geometry decals on alpha masked surfaces upon after the OpenGL window is destroyed then recreated upon changing video settings.
 - Optimize dynamic lighting on BSP geometry with a fix on how it is determined if something is dynamically lit or not.
 - Add caching to Framebuffer Objects to reduce VRAM load.
 - Fix issue with fog colored blending rectangle not being drawn for blending between fogged and non-fogged sky when there was no 3d skybox used.
 - Fix issue where water would not reload it's skybox when the stage of day is modified.
 - Fix issue where the launch arguments for Pathos were not saved, not allowing them to be checked via engine functions later on.
 - Improve hardware compatibility checks when the game boots.
 - Fix for NPC navigation issues on sloped floors/stairs causing AI navigation failures.
 - Fix for potential over-indexing in CBaseNPC::AttemptShiftDestination.
 - Add "Militia NPC" base class for NPCs.
 - Fix variable name shadowing issue in ai_nodegraph.cpp
 - Generalize some schedules used by multiple NPCs into ai_schedules.cpp.
 - Fix ai_setfollowtarget not cleaning the follow target on the NPC when the target field is empty.
 - Fix env_setsequence not resetting the current frame on the target to 0.
 - Added env_syncanimation entity.
 - Fix SPAWN_OBJECT_TYPES_COUNT in CFuncBreakable to reflect the actual count of items it can spawn.
 - Clean up CFuncButton by removing unused "Change Target" feature.
 - Remove unused spawn flags FL_AUTO_ACTIVATE_TRAIN	and FL_RELINK_TRACK from func_trachckange.
 - Added game dll export function AdjustLandmarkPVSData that allows to adjust the VIS data used during level changes.
 - Fix missing call to base class function FreeEntity in CGib entity.
 - Fix missing call to base class function FreeEntity in CInfoMonitorCamera entity.
 - Added info_vismark entity, allowing mappers to add additional PVS sampling spots for level changes.
 - Remove unused FL_LEAVE_DIALOUGE spawnflag from CItemMotorBike entity.
 - Clean up custom weapon and head settings in npcmaker entity to reduce strain on save files and memory.
 - Fix missing call to base class function FreeEntity in CTimeDamage entity.
 - Fix trigger_cameramodel not being set to SOLID_NOT on spawn.
 - Fix spawnflags on trigger_hurt entity.
 - Added trigger_relay_binary entity.
 - Add Uniform Buffer Object support to CGLSLShader class.
 - Improve uniform consistency checks in CGLSLShader class to minimize the reload of uniform values and fix consistency issues across shaders variants.
 - Fix MxToolkit to support VS 2022.
 - Modify compile*.bat files under "pathos/sources" to always use -low for all compiler executions.
 - Updated VHLT tools that automatically remove clipping hulls from func_clipeconomy without needing the "zhlt_noclip" setting to be "1".
 - Added high-resolution DMC Forest skybox.
 
-2024 July 19th additional fixes:
 - Fix broken FGD entry for env_blur.
 - Fix black hole render routines being run even if no black holes are present.
 - Fix FBO cache causing first-frame bug with black holes and other effects.
 - Fix post-process breaking motion blur after level change or save load.
 
- 2024 July 21st:
  - Fix cheap refraction being broken with HDR enabled
  - Fix minlight being broken when particles are in a totally dark area.
  - Add missing "secondary_color" option to lighting flags in particle scripts.
  - Add new "mix_secondary_color" option to lighting flags in particle scripts.
  - Fix potential, rare crash when creating decals on VBM models and add safeguards.
  - Fix NPCs not sensing players who are made partially visible by leaning.
  - Fix shader uniform value caching for uniforms that set arrays of input values.

- 2024 September 14th:
  - Add missing entries for knife to hud script.
  - Add support for displaying ammo counts for item/ammo/weapon pickup history.
  - Add "Documents" viewer Game UI feature.
  - Add muzzleflash particle script for silenced weapons.
  - Remove HDR feature due to severe performance issues caused by FBO blitting.
  - Add experimental Bloom post-process feature to Pathos.
  - Add missing schema definition for screen text.
  - Add explosion gibbing burn damage to gibs.
  - Make pressing Escape key while in a Game UI window always close the window.
  - Add support for Bitsets to client/server User Message system.
  - Add support for custom colors to AI awareness bar.
  - Added GameUIScrollableSurface class.
  - Add support for 32 mission objectives max in Objectives Window.
  - Fix view model snapping issue when exiting ladders due to view model lag.
  - Expand CBitSet class to cover all basic bitset operations/checks/features.
  - Fix issue with flashlight disappearing for 1 frame after exiting ladders.
  - Hide engine command _set_hrtf from users.
  - Improve overdarkening feature used by lightmaps.
  - Fix it so that the "stopmusic" command completely clears music, no longer letting it continue on reload.
  - Add engine function to server to allow retrieval of the invoking player edict on an issued command.
  - Fix issues with engine render code not filtering skybox/portal entities properly when rendering.
  - Fix issue with alpha to coverage corrupting the menu when used with legacy transparents enabled.
  - Fix engine to use R_BindCubemapTexture for all cubemap texture binds now.
  - Fix dynamic lights set to not be culled by the main view frustum still being culled regardless.
  - Fix lightstyle for dynlights being broken if shadows are disabled via cvar.
  - Add safeguard against problematic angle values in dynamic light code.
  - Change usable object glow aura color from blue to green for better visibility.
  - Remove more C-style casts in favor of C++ ones.
  - Modify any rectangle texture binds to use R_BindRectangleTexture instead.
  - Fix an issue with portal surfaces not always binding the rectangle texture properly.
  - Fix decal generation code memory corruption issue with bone index arrays.
  - Add support for dynamic-sized CArray<> basic variable types to the save-restore system.
  - Add support for CBitSet to the save-restore system.
  - Optimize memory used by entities by only declaring save-restore field data when being saved/restored.
  - Add data sync issue on level change with player prediction when on moving entities.
  - Fix MSG_SNDENGINE_OGG message reading channel as unsigned and not letting all chanels be specified.
  - Fix prediction being run on client even when local server is halted.
  - Add error message to schema loader if file is not found.
  - Fix issue with SDL_INIT_VIDEO not being called in the right order, not allowing context version to be set.
  - Modify NPC AI code to use CBitSet for AI bitflags instead of Uint64.
  - Expand AI lean/enemy awareness code to support awareness levels for multiple entities.
  - Fix crash issue in NPC enemy awareness code.
  - Modify NPC code to support determining whether to proritize enemies that can be melee attacked.
  - Modify Patrol NPC code to clear the patrol history far more infrequently when errors occur.
  - Modify some schedule names to feature the names of the base classes.
  - Added support in ambient_oggstream to fade out/stop a specific music track played by another such entity.
  - Add index/name consistency check to player weapon type enums/definitions arrays.
  - Add index/name consistency check to sequence activity type enums/definitions arrays.
  - Add index/name consistency check to bullet type enums/definitions arrays.
  - Fix light_environments on levels not using alternate lightmaps not being setting env lighting values at all.
  - Improve materials definition script code to be more efficient with memory.
  - Add feature for spawning entities with "give" command that allows givin them targetnames using a third parameter.
  - Modify saved passcode system in player code to rely on dynamically sized string_t CArray type.
  - Modify weapon pickup code to leave empty weapons behind in special cases.
  - Add new HUD weapon slot for submachine guns.
  - Modify mission objectives code to use string_t CArray dynamic array instead of fixed-sizeo one.
  - Fix weapon code to properly play pickup animations if player picks up a matching weapon with the clip empty.
  - Modify same ammo types shared by weapons to be single pools of ammo instead of separate.

- 2024 October 12th
  - Merged custom normalmap feature from PR #43.
  - Reformat PR #43 changes to be in line with Pathos coding standards. 
  - Fixed issue in PR #43 where the last set current water pointer would override any custom water normalmap textures.
  - Merged "pos" and "maps" command from PR #38.
  - Reformat PR #38 to be in line with Pathos coding standards.
  - Fixed PR #38 to report player position in world, instead of the last view origin used for rendering.
  - Implementation of Pathos BSP Version 2 format.
    - Custom storage for ambient, diffuse light data, and light vectors.
	- Add data variable in face data for potential lightmap scaling feature in the future.
	- Add data variable in face data for potential smoothing groups feature in the future.
  - Support added for Half-Life 1-type animated lights.
  - Extend light and light_spot entities to support the animated/switchable lighting feature.
  - Add FGD entries for styles to light and light_ entities.
  - Optimize CBasicDraw class by adding support for rendering quads using indexes.
  - Added func_particleblocker entity to specify select brush entities that particles can collide with.
  - Modify ALD format to support animated lights along with bump mapping data generation.
  - Modify renderer to support bump map data generation together with animated lights.
  - Added function header comments in some files.
  - Extension of file interface by adding a function to query the game folder name.
  - Cleanup of model cache code that identifies and loads BSP files.
  - Optimized beam rendering and vapor trail beam code to be more performant by rendering them as quads with indexes.
  - Optimize vapor trail beam lighting retrieval code by only doing it once per a given distance.
  - Optimized lightmap generation code by extending the AllocBlock code to extend both height and width from now on.
  - Added debug cvar to enable dumping of lightmaps generated by BSP renderer.
  - Added game_staminamodifier entity.
  - Modify worldspawn entity to now send lightstyles to client.
  - Fix worldspawn not calling base class's spawn function in derived function.
  - Fix CGLSLShader not creating logs file folder when an error occurs, causing logs not to be created.
  - Add bspconvert tool, which can convert Pathos V1 BSP files to Pathos V2 version.
  - Extend entitytest2 map to showcase switchable lights.
  - Move some BSP processing code to shared file.
  - Move lightstyle code in renderer out of dynamic light class and into it's own.
  - Optimize on lightstyle array code.
  - Add compatibility code for V30 BSP and Pathos V1 BSP to support legacy bump map data storage solution.
  - Clean up struct usage in BSP loading code to specifically use named structures for V30 and Pathos V1 BSP.
  - Move lightstyle array code out of CEnvDLight and into server-side lightstyle class.
  
- 2024 October 14th:
  - Fix potential crash inside HLRAD.
  - Fix issue with outdoor areas not getting lit properly by light_environment entities.
  - Add support for smoothing between the faces of different entities that share the same edge.

- 2024 October 15th:
  - Fix crash in water shader class due to a pointer not being initialized to null on object creation.

- 2024 October 18th:
  - Recompiled all levels to use the new smoothing improvement in HLRAD.
  - Added r_model_light_ratio to allow user-defining of ambient/diffuse lighting split when not fetching bump map model lighting data.
  - Added NULL_LIGHTSTYLE_INDEX constant to track lightstyle value 255, which stands for unused lightstyles slots.
  - Disable overdarkening of lightstyle layers above the base lightmap.
  - Rework of RecursiveLightPoint functions to fetch raw lighting values per style layer instead of a single combined value multiplied with lightstyles.
  - Add R_GetLightingForPosition renderer function to simplify lighting data fetches for general purpose lighting.
  - Extend r_bsp2smd_lm command to support specifying the lightstyle layer to be exported.
  - Add capping of lightstyle values to 0-255 range.
  - Update VBM renderer's level lighting blending code to better support lightstyle value blending(Still a work in progress).
  - Several fixes added to HLRAD to properly account for bump data lightmaps/vector map when it comes to coring and empty lightmap reduction.
  
- 2024 October 25th:
  - Added entities and effects created by valina354, which include:
    - AO mapping for world and VBM models.
	- Vignette effect.
	- Chromatic aberration.
	- Black and white/Grayscale effect.
	- Entity-controllable film grain effect.
	- Water flowmapping.
  - Added new room to entitytest2 to show off bump mapping, specular highlight and cubemapping effects.
  - Fix to the blur division of the bloom effect.
  - Preliminary changes for updating the Pathos BSP V2 format to support compression of lightmap data to reduce disk space load.
  - Modified FL_CreateDirectory function to support creation of directories recursively.
  - Updated dumping code for cubemap faces, lightmaps, and r_bsp2smd_* functions to dump in separate directories under "dumps" folder.
  - Major improvements to the cubemap data format to dynamically support storage slots for different day stages.
  - Added DXT1 compression as default for cubemap files now.
  - Expanded R_ClearBinds function to support clearing units only above a specific unit.
  - Fixed an issue with the func_mirror entity where, when standing in some places, the world would stop rendering in the mirror.
  - Fixed cubemap generation issue described in Issue #19, where the entity list used for generation was still taken from the packet entity list.
  - Major improvements and optimizations to VBM model light caching and blending between light values taken from the lightmap.
  - Added player movement stuck fix from the HL25 updates.
  - Fix in CGLSLShader class for where the determinator array size was using the number of shaders instead of the number of determinators, causing a crash.
  - Removed max shader variations limit from CGLSLShader.